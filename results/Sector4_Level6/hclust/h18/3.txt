3
attempt002_20140920_103730.cs
################
using System;

public class Program {
  public static string Puzzle(string s) {
    	char[] c2 = s.toCharArray();
		String result = "";
		for(int i = 0 ; i<c2.length;i++)
		{
			int c = (c2[i]+getFibonacci(i)-97)%26+97;
			result += (char)c;
		}
		return result;
	}

	public static int getFibonacci(int n)
	{
		return (n<=1)?1:getFibonacci(n-1)+getFibonacci(n-2);
	}
}
attempt003_20140920_103748.cs
################
using System;

public class Program {
  public static string Puzzle(string s) {
    	char[] c2 = s.ToCharArray();
		String result = "";
		for(int i = 0 ; i<c2.Length;i++)
		{
			int c = (c2[i]+getFibonacci(i)-97)%26+97;
			result += (char)c;
		}
		return result;
	}

	public static int getFibonacci(int n)
	{
		return (n<=1)?1:getFibonacci(n-1)+getFibonacci(n-2);
	}
}
attempt005_20140920_103956.cs
################
using System;

public class Program {
  public static string Puzzle(string s) {
    	char[] c2 = s.ToCharArray();
		String result = "";
		for(int i = 0 ; i<c2.Length;i++)
		{
			int c = (c2[i]+getFibonacci(i)-97)%26+97;
			result += (char)c;
		}
		return result;
	}

	public static int getFibonacci(int n)
	{
		int[] array = new int[n];
		for(int i = 0;i<n;i++)
		{
			a[i]=(a[i]<=1)?1:a[i-1]+a[i-2];
		}
		return a[n];
	}
}
attempt006_20140920_104006.cs
################
using System;

public class Program {
  public static string Puzzle(string s) {
    	char[] c2 = s.ToCharArray();
		String result = "";
		for(int i = 0 ; i<c2.Length;i++)
		{
			int c = (c2[i]+getFibonacci(i)-97)%26+97;
			result += (char)c;
		}
		return result;
	}

	public static int getFibonacci(int n)
	{
		int[] a = new int[n];
		for(int i = 0;i<n;i++)
		{
			a[i]=(a[i]<=1)?1:a[i-1]+a[i-2];
		}
		return a[n];
	}
}
attempt007_20140920_104048.cs
################
using System;

public class Program {
  public static string Puzzle(string s) {
    	char[] c2 = s.ToCharArray();
		String result = "";
		for(int i = 0 ; i<c2.Length;i++)
		{
			int c = (c2[i]+getFibonacci(i)-97)%26+97;
			result += (char)c;
		}
		return result;
	}

	public static int getFibonacci(int n)
	{
		int[] a = new int[n+1];
		for(int i = 0;i<n;i++)
		{
			a[i]=(a[i]<=1)?1:a[i-1]+a[i-2];
		}
		return a[n];
	}
}
attempt008_20140920_104121.cs
################
using System;

public class Program {
  public static string Puzzle(string s) {
    	char[] c2 = s.ToCharArray();
		String result = "";
		for(int i = 0 ; i<c2.Length;i++)
		{
			int c = (c2[i]+getFibonacci(i)-97)%26+97;
			result += (char)c;
		}
		return result;
	}

	public static int getFibonacci(int n)
	{
		int[] a = new int[n+1];
		for(int i = 0;i<=n;i++)
		{
			a[i]=(a[i]<=1)?1:a[i-1]+a[i-2];
		}
		return a[n];
	}
}
attempt009_20140920_104258_winning3.cs
################
using System;

public class Program {
  public static string Puzzle(string s) {
    	char[] c2 = s.ToCharArray();
		String result = "";
		for(int i = 0 ; i<c2.Length;i++)
		{
			int c = (c2[i]+getFibonacci(i)-97)%26+97;
			result += (char)c;
		}
		return result;
	}

	public static int getFibonacci(int n)
	{
		int[] a = new int[n+1];
		for(int i = 0;i<=n;i++)
		{
			a[i]=(i<=1)?1:a[i-1]+a[i-2];
		}
		return a[n];
	}
}
attempt012_20140920_085955.cs
################



public class Program {
    public static string Puzzle(string s) {
        string s2 = "";
        for (int i = 0; i < s.Length; i++) {
            s2 += (char) ((s[i] - 'a' + fib(i + 1)) % 26 + 'a');
        }
        return s2;
    }
    public static int fib(int i) {
        if (i == 0) return 0;
        if (i == 1) return 1;
        return fib(i - 1) + fib(i - 2);
    }
}
attempt013_20140920_023107.cs
################
using System;

public class Program {
  public static string Puzzle(string s) {
var result = String.Empty;
int n = 0;
   foreach(var c in s)
   {
	   var i = c+Fib(n);
	   if (i >= 97+26)
	   i -= 26;
	   result += (char)i;
	   n++;
   }
   
   
   return result; 
  }
  

        public static int Fib(int n)
        {
            if (n < 2) return 1;
            return Fib(n - 2) + Fib(n - 1);
		}
}
attempt013_20140920_090132.cs
################



public class Program {
    public static string Puzzle(string s) {
        string s2 = "";
        for (int i = 0; i < s.Length; i++) {
            s2 += (char) ((s[i] - 'a' + fib(i + 1)) % 26 + 'a');
        }
        return s2;
    }
    public static int fib(int i) {
        if (i == 0) return 0;
        if (i == 1) return 1;
        return fib(i - 1) + fib(i - 2);
    }
}
attempt014_20140920_023256.cs
################
using System;

public class Program {
  public static string Puzzle(string s)
        {
            var result = String.Empty;
            int n = 0;
            foreach (var c in s)
            {
                var i = (c - 97 + Fib(n)) % 26;
                result += (char)(i + 97);
                n++;
            }


            return result;
        }


        public static int Fib(int n)
        {
            if (n < 2) return 1;
            return Fib(n - 2) + Fib(n - 1);
        }
}
Number of samples in cluster: 11
